import { Test, TestingModule } from '@nestjs/testing';
import { UsersService } from './users.service';
import { PrismaService } from '../prisma/prisma.service';
import { prismaServiceMock } from '../prisma/prisma.service.mock'; // Importe o mock do PrismaService

describe('UsersService', () => {
  let service: UsersService;
  let prismaService: PrismaService;

  beforeEach(async () => {
    const module: TestingModule = await Test.createTestingModule({
      providers: [
        UsersService,
        {
          provide: PrismaService,
          useValue: prismaServiceMock,
        },
      ],
    }).compile();

    service = module.get<UsersService>(UsersService);
    prismaService = module.get<PrismaService>(PrismaService);
  });

  it('should be defined', () => {
    expect(service).toBeDefined();
  });

  it('should create a user', async () => {
    const userDto = { email: 'test@example.com', name: 'Test User', status: 'Ativo', profile: 'comum' };
    const createdUser = { ...userDto, id: 1, createdAt: new Date(), updatedAt: new Date() };

    prismaService.user.create.mockResolvedValue(createdUser);

    const result = await service.create(userDto);
    expect(result).toEqual(createdUser);
    expect(prismaService.user.create).toHaveBeenCalledWith({ data: userDto });
  });

  // Adicione outros testes para findOne, findAll, update, remove, etc.
});
